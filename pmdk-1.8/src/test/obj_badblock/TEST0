#!/usr/bin/env bash
#
# Copyright 2019, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# obj_badblock/TEST0 -- test for inserting bad blocks into an obj pool
#
. ../unittest/unittest.sh
require_test_type medium
require_badblock_tests_enabled block_device

setup

. ../common_badblock.sh
MOUNT_DIR="$DIR/mnt-pmem"
badblock_test_init block_device $MOUNT_DIR

POOLSET=$MOUNT_DIR/testset1
RESVSIZE=$((4 * 1024 * 1024 * 1024)) # 4GiB

create_poolset $POOLSET\
	$RESVSIZE:$MOUNT_DIR/testdir11:d\
	O SINGLEHDR

# create pool and allocate some amount of data
expect_normal_exit ./obj_badblock$EXESUFFIX $POOLSET c

# inject bad block into one of files created in pool directory during
# allocation
FIRST_SECTOR=$(expect_normal_exit $EXTENTS $MOUNT_DIR/testdir11/000010.pmem -l 0)
ndctl_inject_error $NAMESPACE $FIRST_SECTOR 8

expect_bad_blocks $NAMESPACE

expect_abnormal_exit ./obj_badblock$EXESUFFIX $POOLSET o

ndctl_uninject_error $FULLDEV $NAMESPACE $FIRST_SECTOR 8
badblock_test_fini $MOUNT_DIR

pass
