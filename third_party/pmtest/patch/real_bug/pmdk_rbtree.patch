diff --git a/nvml/src/examples/libpmemobj/tree_map/rbtree_map.c b/nvml/src/examples/libpmemobj/tree_map/rbtree_map.c
index 63897f3..110fce2 100644
--- a/nvml/src/examples/libpmemobj/tree_map/rbtree_map.c
+++ b/nvml/src/examples/libpmemobj/tree_map/rbtree_map.c
@@ -204,7 +204,9 @@ rbtree_map_rotate(TOID(struct rbtree_map) map,
 	
 	NODE_P(child) = NODE_P(node);
 
-	TX_SET(NODE_P(node), slots[NODE_LOCATION(node)], child);
+	TX_ADD(NODE_P(node));
+	PM_EQU(NODE_PARENT_AT(node, NODE_LOCATION(node)), child);
+	// TX_SET(NODE_P(node), slots[NODE_LOCATION(node)], child);
 
 	PM_EQU(D_RW(child)->slots[c], node);
 	PM_EQU(D_RW(node)->parent, child);
@@ -413,7 +415,9 @@ rbtree_map_remove(PMEMobjpool *pop, TOID(struct rbtree_map) map, uint64_t key)
 		if (TOID_EQUALS(NODE_P(x), r)) {
 			TX_SET(r, slots[RB_LEFT], x);
 		} else {
-			TX_SET(NODE_P(y), slots[NODE_LOCATION(y)], x);
+			TX_ADD(y);
+			PM_EQU(NODE_PARENT_AT(y, NODE_LOCATION(y)), x);
+			// TX_SET(NODE_P(y), slots[NODE_LOCATION(y)], x);
 		}
 
 		if (D_RO(y)->color == COLOR_BLACK)
@@ -428,7 +432,9 @@ rbtree_map_remove(PMEMobjpool *pop, TOID(struct rbtree_map) map, uint64_t key)
 			TX_SET(D_RW(n)->slots[RB_LEFT], parent, y);
 			TX_SET(D_RW(n)->slots[RB_RIGHT], parent, y);
 
-			TX_SET(NODE_P(n), slots[NODE_LOCATION(n)], y);
+			TX_ADD(NODE_P(n));
+			PM_EQU(NODE_PARENT_AT(n, NODE_LOCATION(n)), y);
+			// TX_SET(NODE_P(n), slots[NODE_LOCATION(n)], y);
 		}
 		TX_FREE(n);
 	} TX_END
