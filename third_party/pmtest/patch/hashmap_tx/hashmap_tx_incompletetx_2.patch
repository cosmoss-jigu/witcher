diff --git a/nvml/src/examples/libpmemobj/hashmap/hashmap_tx.c b/nvml/src/examples/libpmemobj/hashmap/hashmap_tx.c
index 637369d..2e17cdb 100644
--- a/nvml/src/examples/libpmemobj/hashmap/hashmap_tx.c
+++ b/nvml/src/examples/libpmemobj/hashmap/hashmap_tx.c
@@ -197,6 +197,7 @@ hm_tx_insert(PMEMobjpool *pop, TOID(struct hashmap_tx) hashmap,
 	}
 
 	int ret = 0;
+	PMTest_CHECKER_START;
 	TX_BEGIN(pop) {
 		TX_ADD_FIELD(D_RO(hashmap)->buckets, bucket[h]);
 		//TX_ADD_FIELD(buckets, bucket[h]);
@@ -215,11 +216,13 @@ hm_tx_insert(PMEMobjpool *pop, TOID(struct hashmap_tx) hashmap,
 		PM_EQU((D_RW(buckets)->bucket[h]), (e));
 		PM_EQU((D_RW(hashmap)->count), (D_RW(hashmap)->count+1));
 		num++;
+		//return ret;
 	} TX_ONABORT {
 		fprintf(stderr, "transaction aborted: %s\n",
 			pmemobj_errormsg());
 		ret = -1;
 	} TX_END
+	PMTest_CHECKER_END;
 
 	if (ret)
 		return ret;
diff --git a/nvml/src/examples/libpmemobj/map/data_store.c b/nvml/src/examples/libpmemobj/map/data_store.c
index 075bd88..50929cd 100755
--- a/nvml/src/examples/libpmemobj/map/data_store.c
+++ b/nvml/src/examples/libpmemobj/map/data_store.c
@@ -208,14 +208,14 @@ int main(int argc, const char *argv[]) {
 			/* new_store_item is transactional! */
 			metadataPtr = metadataVectorPtr[i];
 			PMTest_START;
-			if (strcmp("hashmap_atomic", type))
-				PMTest_CHECKER_START;
+			// if (strcmp("hashmap_atomic", type))
+			// 	PMTest_CHECKER_START;
 			TX_BEGIN(pop) {
 			map_insert(mapc, D_RW(root)->map, rand(),
 					new_store_item().oid);
 			} TX_END
-			if (strcmp("hashmap_atomic", type))
-				PMTest_CHECKER_END;
+			// if (strcmp("hashmap_atomic", type))
+			// 	PMTest_CHECKER_END;
 			PMTest_END;
 			C_execVeri(p, metadataPtr);
 		}
@@ -251,13 +251,13 @@ int main(int argc, const char *argv[]) {
 	for (int i = 0; i < nkeys; ++i) {
 		metadataPtr = metadataVectorPtr[i];
 		PMTest_START;
-		if (strcmp("hashmap_atomic", type))
-			PMTest_CHECKER_START;
+		// if (strcmp("hashmap_atomic", type))
+		// 	PMTest_CHECKER_START;
 
 		PMEMoid item = map_remove(mapc, D_RW(root)->map, keys[i]);
 	
-		if (strcmp("hashmap_atomic", type))
-			PMTest_CHECKER_END;
+		// if (strcmp("hashmap_atomic", type))
+		// 	PMTest_CHECKER_END;
 		PMTest_END;
 		C_execVeri(p, metadataPtr);
 
